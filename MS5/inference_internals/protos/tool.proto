syntax = "proto3";

import "google/protobuf/struct.proto";

package tool;

service ToolService {
  // For Node Service: Validates if a user can access a list of tools.
  // Note: This is also implemented as an HTTP endpoint for services that prefer REST.
  rpc ValidateTools(ValidateToolsRequest) returns (ValidateToolsResponse);

  // For Inference P1: Fetches the full definitions for a list of tools.
  rpc GetToolDefinitions(GetToolDefinitionsRequest) returns (GetToolDefinitionsResponse);
  
  // For Inference P2: Executes one or more tool calls in parallel.
  rpc ExecuteMultipleTools(ExecuteMultipleToolsRequest) returns (ExecuteMultipleToolsResponse);
}

// --- Messages for Validation ---
message ValidateToolsRequest {
  string user_id = 1;
  repeated string tool_ids = 2;
}
message ValidateToolsResponse {
  bool authorized = 1;
  string error_message = 2;
}

// --- Messages for Definition Fetching ---
message GetToolDefinitionsRequest {
  string user_id = 1;
  repeated string tool_ids = 2;
}
message GetToolDefinitionsResponse {
  repeated google.protobuf.Struct definitions = 1;
}

// --- Messages for Execution ---
message ToolCall {
    string id = 1; // ID from the LLM to track the call
    string name = 2;
    google.protobuf.Struct arguments = 3;
}
message ExecuteMultipleToolsRequest {
  repeated ToolCall tool_calls = 1;
}

message ToolResult {
    string tool_call_id = 1;
    string name = 2;
    string status = 3; // "success" or "error"
    string output = 4; // The JSON string result of the tool execution
}
message ExecuteMultipleToolsResponse {
    repeated ToolResult results = 1;
}